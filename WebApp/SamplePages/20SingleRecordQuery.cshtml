@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Single Record Primary Key Query");

    //output variable
    string id = "";
    string name = "";
    var message = "";
    var color = "";

    //input variables for web controls
    var arg = Request.Form["Arg"];
    var thebutton = Request.Form["theButton"];

    //remember the 1st time the page is called
    //input variables will be null

    //this page will access the database when the submit button is pressed
    //the project needs access to 2 more NuGet packages
    //Microsoft.Aspnet.WebPages.Data
    //Microsoft.Aspnet.Webpages.WebData

    //connect to the database
    //use the name attribute off your web connection string

    var db = Database.Open("NWDB");

    //create the sql command to be executed on the database
    //input parameters will be represented by the use of placeholders
    //placeholders are indexes (0, 1, 2,...)
    //your command can use multiple placeholders

    var sqlcommand = @"SELECT CategoryID, CategoryName
        FROM Categories
        WHERE CategoryID = @0";

    //execute command
    //there is 3 ways to execute a query DEPENDING on your expected results
    //a) a single row   .QuerySingle(command [, list of argments])
    //b) 0, 1 or more records   .Query(command [, list of argments])
    //c) a single value   .QueryValue(command [, list of argments])
    //the list of argments are your positional incoming argment values
    //primary key lookup
    //result should  be one record

    var results = db.QuerySingle(sqlcommand, arg);
}

@section banner {
    <h1>@Page.Title</h1>
}

@if (IsPost)
{
    if (thebutton.Equals("clear"))
    {
        message = "Clear button pressed";
        color = "color:green";
        arg = "";
        id = "";
        name = "";
    }
    else
    {
        //always check if you even have results

        //checking for query results DEPEND on how the query was executed
        // a) and c)   check for null
        // b) check the .Count of the results

        //a primary key lookup returns either the record or nothing

        if (results == null)
        {
            message = "Record NOT found";
            color = "color:firebrick";
            arg = "";
            id = "";
            name = "";
        }
        else
        {
            message = "Record found";
            color = "color:green";

            //accessing the data out of your results
            //there is 2 ways to access data on a result row
            //a) using an index syntax  result[index] where index value starts at
            //0 which is the first column on the select
            //b) using the Property Name    syntax result.PropertyName where the
            //property name is the column title

            //data returned has a datatype that matches the Property
            //regionid = results[0].ToString();
            //regiondescription = results[1];
            id = (results.CategoryID).ToString();
            name = results.CategoryName;
        }
    }
}
else
{
    message = "IsPost = false";
    color = "color:green";
    arg = "";
}

<form id="theform" method="post">
    <div class="row">
        <div class="col-md-6 text-right">
            <label id="lblArg" for="Arg">Enter a Category ID:</label>
        </div>
        <div class="col-md-6 text-left">
            <input type="number" step="1" min="1" id="Arg" name="Arg"
                   value="@arg" placeholder="category id" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12 text-center">
            <button type="submit" id="theButton" name="theButton"
                    value="submit" class="btn btn-light">
                Fetch
            </button>&nbsp;&nbsp;
            <button type="submit" id="theButton" name="theButton"
                    value="clear" class="btn btn-light">
                Clear
            </button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-6 text-right">
            <label id="lblID">Category ID:</label>
        </div>
        <div class="col-md-6 text-left">
            <label id="ID">@id</label>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 text-right">
            <label id="lblDescription">Category Name:</label>
        </div>
        <div class="col-md-6 text-left">
            <input type="text" id="Description" name="Description"
                   value="@name" readonly />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-md-12 text-center">
            <p style=@color>
                @message
            </p>
        </div>
    </div>
</form>
