@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}",
        "Ex04 Page 02");


    var message = "";
    var color = "";
    var albumid = Request.Form["AlbumID"];
    var albumtitle = Request.Form["AlbumTitle"];
    var artistid = Request.Form["ArtistList"];
    var releaseyear = Request.Form["ReleaseYear"];
    var releaselabel = Request.Form["ReleaseLabel"];
    var thebutton = Request.Form["theButton"];
    bool updateDeleteEnabled = true;

    var aid = Request.QueryString["aid"];

    if (string.IsNullOrEmpty(aid))
    {
        Response.Redirect("Ex04P1.cshtml");
    }
    var db = Database.Open("CHINOOKDB");
    var artistquery = "SELECT ArtistId, Name "
        + "FROM Artists "
        + "ORDER BY Name";
    var artistlist = db.Query(artistquery);
}

@section banner {
    <div class="row">
        <div class="col-4">
        </div>
        <div class="col-8 text-left">
            <h3>@Page.Title</h3>
        </div>
    </div>
}

@if (!IsPost) // NO Buttons Pressed
{
    var albumquery = "SELECT AlbumID, Title, ArtistID, ReleaseYear, ReleaseLabel "
        + "FROM Albums "
        + "WHERE AlbumID = @0 "
        + "ORDER BY Title";
    var albumresults = db.QuerySingle(albumquery, aid);
    if (albumresults == null)
    {
        message = "Record NOT found";
        color = "color:firebrick";
    }
    else
    {
        albumid = albumresults.AlbumID.ToString();
        albumtitle = albumresults.Title;
        artistid = albumresults.ArtistID.ToString();
        releaseyear = albumresults.ReleaseYear.ToString();
        releaselabel = albumresults.ReleaseLabel;
    }
}
else // Buttons Pressed
{
    try
    {
        if (thebutton.Equals("back"))
        {
            Response.Redirect("Ex04P1.cshtml");
        }
        else if (thebutton.Equals("clear"))
        {
            albumid = "";
            albumtitle = "";
            artistid = "0";
            releaseyear = "";
            releaselabel = "";
        }
        else if (thebutton.Equals("add"))
        {
            if (albumtitle == "")
            {
                message = "Album Title is required";
                color = "color:firebrick";
            }
            else if (artistid == "0")
            {
                message = "Artist is required";
                color = "color:firebrick";
            }
            else if (releaseyear == "")
            {
                message = "Release Year is required";
                color = "color:firebrick";
            }
            else if (int.Parse(releaseyear) < 1950 || int.Parse(releaseyear) > DateTime.Today.Year)
            {
                message = "Release Year must be between 1950 and this year";
                color = "color:firebrick";
            }
            else if (releaselabel == "")
            {
                message = "Release Label is required";
                color = "color:firebrick";
            }
            else
            {
                var inscommand = "INSERT INTO Albums "
                    + "(Title, ArtistID, ReleaseYear, ReleaseLabel) "
                    + "VALUES(@0, @1, @2, @3)";
                var rowsaffected = db.Execute(inscommand, albumtitle,
                    artistid,
                    int.Parse(releaseyear),
                    releaselabel);
                if (rowsaffected > 0)
                {
                    decimal newid = db.GetLastInsertId();
                    albumid = newid.ToString();
                    message = "Record ADDED";
                    color = "color:green";
                }
                else
                {
                    message = "Record NOT found";
                    color = "color:firebrick";
                }
            }
        }
        else if (thebutton.Equals("update"))
        {
            if (albumtitle == "")
            {
                message = "Album Title is required";
                color = "color:firebrick";
            }
            else if (artistid == "0")
            {
                message = "Artist is required";
                color = "color:firebrick";
            }
            else if (releaseyear == "")
            {
                message = "Release Year is required";
                color = "color:firebrick";
            }
            else if (int.Parse(releaseyear) < 1950 || int.Parse(releaseyear) > DateTime.Today.Year)
            {
                message = "Release Year must be between 1950 and this year";
                color = "color:firebrick";
            }
            else if (releaselabel == "")
            {
                message = "Release Label is required";
                color = "color:firebrick";
            }
            else
            {
                var updatecommand = "UPDATE Albums SET "
                    + "Title = @0, "
                    + "ArtistID = @1, "
                    + "ReleaseYear = @2, "
                    + "ReleaseLabel = @3 "
                    + "WHERE AlbumID = @4";
                var rowsaffected = db.Execute(updatecommand, albumtitle,
                    artistid,
                    releaseyear,
                    releaselabel,
                    albumid);
                if (rowsaffected > 0)
                {
                    message = "Record UPDATED";
                    color = "color:green";
                }
                else
                {
                    message = "Record NOT found";
                    color = "color:firebrick";
                }
            }
        }
        else if (thebutton.Equals("delete"))
        {
            var deleteStatement = "Delete Albums WHERE AlbumID = @0";
            var rowsaffected = db.Execute(deleteStatement, albumid);
            if (rowsaffected > 0)
            {
                message = "Record DELETED";
                color = "color:green";
                albumid = "";
                albumtitle = "";
                artistid = "0";
                releaseyear = "";
                releaselabel = "";
                updateDeleteEnabled = false;
            }
            else
            {
                message = "Record NOT found";
                color = "color:firebrick";
            }
        }
    }
    catch (Exception ex)
    {
        message = "Processing error:" + @ex.Message;
        color = "color:firebrick";
    }
}

<form id="theForm" action="" method="post">
    <div class="row">
        <div class="col-4 text-right">
            <label id="lblID" for="AlbumID">Album ID</label>
        </div>
        <div class="col-8 text-left">
            <input type="text" name="AlbumID" value="@albumid" readonly />
        </div>
    </div>
    <div class="row">
        <div class="col-4 text-right">
            <label id="lblName" for="AlbumTitle">Album Title</label>
        </div>
        <div class="col-8 text-left">
            <input type="text" name="AlbumTitle" value="@albumtitle" />
        </div>
    </div>
    <div class="row">
        <div class="col-4 text-right">
            <label id="lblList" for="ArtistList">Artist</label>
        </div>
        <div class="col-8 text-left">
            <select name="ArtistList">
                <option value="0">select...</option>
                @foreach (var acollectionrow in artistlist)
                {
                    if (acollectionrow.ArtistID.ToString() == artistid)
                    {
                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                    }
                    else
                    {
                        <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                    }
                }
            </select>
        </div>
    </div>
    <div class="row">
        <div class="col-4 text-right">
            <label id="lblReleaseYear" for="ReleaseYear">Release Year</label>
        </div>
        <div class="col-8 text-left">
            <input type="number" name="ReleaseYear" value="@releaseyear" />
        </div>
    </div>
    <div class="row">
        <div class="col-4 text-right">
            <label id="lblReleaseLabel" for="ReleaseLabel">Release Label</label>
        </div>
        <div class="col-8 text-left">
            <input type="text" name="ReleaseLabel" value="@releaselabel" />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-4">
        </div>
        <div class="col-8 text-left">
            <button type="submit" name="theButton" id="theCancel" class="btn btn-light" formnovalidate
                    value="back">
                Back
            </button>&nbsp;
            <button type="submit" name="theButton" id="theClear" class="btn btn-light"
                    value="clear">
                Clear
            </button>&nbsp;
            <button type="submit" name="theButton" id="theAdd" class="btn btn-light"
                    value="add">
                Add
            </button>&nbsp;
            <button type="submit" name="theButton" id="theUpdate" class="btn btn-light"
                    @(updateDeleteEnabled ? "" : "disabled") value="update">
                Update
            </button>&nbsp;
            <button type="submit" name="theButton" id="theDelete" class="btn btn-light"
                    @(updateDeleteEnabled ? "" : "disabled") value="delete">
                Delete
            </button>
        </div>
    </div>
    <script type="text/javascript">
        document.getElementById("theDelete").onclick = ConfirmDelete;
        function ConfirmDelete() {
            return confirm("Are you sure you want to DELETE @albumtitle?");
        }
    </script>
</form>
<br />
<div class="row">
    <div class="col-md-4">
    </div>
    <div class="col-md-6 text-left">
        <p style=@color>
            @message
        </p>
    </div>
</div>
